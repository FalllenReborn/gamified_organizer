{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Seweryn\\\\Documents\\\\Projects\\\\taskmaster\\\\frontend\\\\src\\\\components\\\\login\\\\LoginPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { ThemeContext } from '../../ThemeContext';\nimport './loginPopup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPopup = ({\n  show,\n  onClose,\n  onOpenRegister\n}) => {\n  _s();\n  const {\n    isDarkMode,\n    selectedLanguage\n  } = useContext(ThemeContext);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const translations = {\n    english: {\n      login: 'Login',\n      confirm: 'Confirm',\n      register: 'Register',\n      username: 'Username',\n      password: 'Password'\n    },\n    polish: {\n      login: 'Zaloguj się',\n      confirm: 'Potwierdź',\n      register: 'Zarejestruj się',\n      username: 'Nazwa użytkownika',\n      password: 'Hasło'\n    }\n  };\n  const t = translations[selectedLanguage];\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch('/accounts/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': '{{ csrf_token }}' // Replace with your CSRF token if not using Django template\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => {\n      if (response.ok) {\n        // Redirect to dashboard or another page on successful login\n        window.location.href = '/dashboard/';\n      } else {\n        // Display error message if login failed\n        setError('Invalid username or password.');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  if (!show) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup-overlay ${isDarkMode ? 'dark-mode' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `popup-content ${isDarkMode ? 'dark-mode' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-icon\",\n        onClick: onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: t.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: t.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: t.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"register-button\",\n            onClick: onOpenRegister,\n            children: t.register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"confirm-button\",\n            children: t.confirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPopup, \"2ABpQ3hHOwlyB8MACV2dbjgvUVY=\");\n_c = LoginPopup;\nexport default LoginPopup;\nvar _c;\n$RefreshReg$(_c, \"LoginPopup\");","map":{"version":3,"names":["React","useContext","useState","ThemeContext","jsxDEV","_jsxDEV","LoginPopup","show","onClose","onOpenRegister","_s","isDarkMode","selectedLanguage","username","setUsername","password","setPassword","error","setError","translations","english","login","confirm","register","polish","t","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","window","location","href","catch","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Seweryn/Documents/Projects/taskmaster/frontend/src/components/login/LoginPopup.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { ThemeContext } from '../../ThemeContext';\r\nimport './loginPopup.css';\r\n\r\nconst LoginPopup = ({ show, onClose, onOpenRegister }) => {\r\n  const { isDarkMode, selectedLanguage } = useContext(ThemeContext);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const translations = {\r\n    english: {\r\n      login: 'Login',\r\n      confirm: 'Confirm',\r\n      register: 'Register',\r\n      username: 'Username',\r\n      password: 'Password'\r\n    },\r\n    polish: {\r\n      login: 'Zaloguj się',\r\n      confirm: 'Potwierdź',\r\n      register: 'Zarejestruj się',\r\n      username: 'Nazwa użytkownika',\r\n      password: 'Hasło'\r\n    }\r\n  };\r\n\r\n  const t = translations[selectedLanguage];\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch('/accounts/login/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': '{{ csrf_token }}', // Replace with your CSRF token if not using Django template\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        // Redirect to dashboard or another page on successful login\r\n        window.location.href = '/dashboard/';\r\n      } else {\r\n        // Display error message if login failed\r\n        setError('Invalid username or password.');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n  };\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={`popup-overlay ${isDarkMode ? 'dark-mode' : ''}`}>\r\n      <div className={`popup-content ${isDarkMode ? 'dark-mode' : ''}`}>\r\n        <button className=\"close-icon\" onClick={onClose}>X</button>\r\n        <h2>{t.login}</h2>\r\n        <form className=\"login-form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">{t.username}</label>\r\n            <input type=\"text\" id=\"username\" name=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">{t.password}</label>\r\n            <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n          </div>\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          <div className=\"form-actions\">\r\n            <button type=\"button\" className=\"register-button\" onClick={onOpenRegister}>{t.register}</button>\r\n            <button type=\"submit\" className=\"confirm-button\">{t.confirm}</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}